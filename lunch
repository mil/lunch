#!/usr/bin/env ruby
require 'yaml'
require 'uri'

# http://stackoverflow.com/questions/1805761/check-if-url-is-valid-ruby
String.class_eval do
  def is_valid_url?
    uri = URI.parse self
    uri.kind_of? URI::HTTP
  rescue URI::InvalidURIError
    false
  end
end

$config_file = "#{ENV['HOME']}/.lunchcfg.yaml"
$config = YAML.load_file $config_file

# Load args
args = ARGV.flat_map do |arg|
  arg.split(" ").length > 1 ? arg.split(" ") : arg
end

if args.length == 0 then
  args = $config['Default_Query'].split(" ") 
end


# Executing shorthands
if args.length == 1 && !args[0].is_valid_url? && $config['Shorthands'][args[0]]
  cmd = $config['Shorthands'][args[0]]
  args = cmd.split(' ')
end

p args

# Not a single word query -- so set Search and Handler if possible
args.each_with_index do |arg, i|
  if $config['Searches'].keys.include? arg
    args.delete_at i
    $search = $config['Searches'][arg]
  end
end
args.each_with_index do |arg, i|
  if $config['Handlers'].keys.include? arg
    $search = "%s" if arg == "sh"
    args.delete_at i
    $handler = $config['Handlers'][arg]
  end
end

if !$search
  $search = $handler ?  "%s" : $config['Searches'][$config['Searches']['default']] 
end
if !$handler
  $handler = $config['Handlers'][$config['Handlers']['default']] 
end

args_output = args.join($search.include?("://") ? "%20" : " ")
if args_output.is_valid_url?
  $exec_command = $handler.gsub '%s', args_output
else
  $exec_command = $search.gsub '%s', args_output
  $exec_command = $handler.gsub '%s', $exec_command
end

%x[#{$exec_command}]
